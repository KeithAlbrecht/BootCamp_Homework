{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# WeatherPy\n",
    "----\n",
    "\n",
    "#### Note\n",
    "* Instructions have been included for each segment. You do not have to follow them exactly, but they are included to help you think through the steps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Dependencies and Setup\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import requests\n",
    "import time\n",
    "from time import mktime\n",
    "import json as json\n",
    "import pprint as pprint\n",
    "from datetime import datetime, date, time, timedelta\n",
    "\n",
    "\n",
    "# Import API key\n",
    "from api_keys import api_key\n",
    "\n",
    "# Incorporated citipy to determine city based on latitude and longitude\n",
    "from citipy import citipy\n",
    "\n",
    "# Output File (CSV)\n",
    "output_data_file = \"output_data/cities.csv\"\n",
    "\n",
    "# Range of latitudes and longitudes\n",
    "lat_range = (-90, 90)\n",
    "lng_range = (-180, 180)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Generate Cities List"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "599"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# List for holding lat_lngs and cities\n",
    "lat_lngs = []\n",
    "cities = []\n",
    "\n",
    "# Create a set of random lat and lng combinations\n",
    "lats = np.random.uniform(low=-90.000, high=90.000, size=1500)\n",
    "lngs = np.random.uniform(low=-180.000, high=180.000, size=1500)\n",
    "lat_lngs = zip(lats, lngs)\n",
    "\n",
    "# Identify nearest city for each lat, lng combination\n",
    "for lat_lng in lat_lngs:\n",
    "    city = citipy.nearest_city(lat_lng[0], lat_lng[1]).city_name\n",
    "    \n",
    "    # If the city is unique, then add it to a our cities list\n",
    "    if city not in cities:\n",
    "        cities.append(city)\n",
    "\n",
    "# Print the city count to confirm sufficient count\n",
    "len(cities)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Perform API Calls\n",
    "* Perform a weather check on each city using a series of successive API calls.\n",
    "* Include a print log of each city as it'sbeing processed (with the city number and city name).\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['akropong',\n",
       " 'illoqqortoormiut',\n",
       " 'nemencine',\n",
       " 'lewistown',\n",
       " 'mar del plata',\n",
       " 'narrabri',\n",
       " 'nikolskoye',\n",
       " 'dolbeau',\n",
       " 'atuona',\n",
       " 'naryan-mar',\n",
       " 'naze',\n",
       " 'alice springs',\n",
       " 'uarini',\n",
       " 'kapaa',\n",
       " 'barrow',\n",
       " 'yulara',\n",
       " 'busselton',\n",
       " 'miami',\n",
       " 'namatanai',\n",
       " 'porto novo',\n",
       " 'bambous virieux',\n",
       " 'yellowknife',\n",
       " 'saskylakh',\n",
       " 'isangel',\n",
       " 'ternate',\n",
       " 'iqaluit',\n",
       " 'rio grande',\n",
       " 'taolanaro',\n",
       " 'mataura',\n",
       " 'ponta do sol',\n",
       " 'aklavik',\n",
       " 'trincomalee',\n",
       " 'vaini',\n",
       " 'albany',\n",
       " 'ixtapa',\n",
       " 'srednekolymsk',\n",
       " 'inhambane',\n",
       " 'cabo san lucas',\n",
       " 'ushuaia',\n",
       " 'tucurui',\n",
       " 'rikitea',\n",
       " 'kundiawa',\n",
       " 'puerto ayora',\n",
       " 'bid',\n",
       " 'punta arenas',\n",
       " 'sao filipe',\n",
       " 'bredasdorp',\n",
       " 'chuy',\n",
       " 'talnakh',\n",
       " 'camacha',\n",
       " 'cherskiy',\n",
       " 'ugoofaaru',\n",
       " 'qaanaaq',\n",
       " 'galveston',\n",
       " 'hermanus',\n",
       " 'ewa beach',\n",
       " 'port-cartier',\n",
       " 'nanchang',\n",
       " 'penzance',\n",
       " 'kita',\n",
       " 'tsogni',\n",
       " 'olafsvik',\n",
       " 'bluff',\n",
       " 'digoin',\n",
       " 'baruun-urt',\n",
       " 'tecoanapa',\n",
       " 'kiunga',\n",
       " 'polovinnoye',\n",
       " 'samusu',\n",
       " 'ilulissat',\n",
       " 'avarua',\n",
       " 'jabiru',\n",
       " 'tuktoyaktuk',\n",
       " 'chara',\n",
       " 'traverse city',\n",
       " 'jamestown',\n",
       " 'nanortalik',\n",
       " 'port alfred',\n",
       " 'vao',\n",
       " 'beringovskiy',\n",
       " 'new norfolk',\n",
       " 'san jose',\n",
       " 'jackson',\n",
       " 'provideniya',\n",
       " 'yerbogachen',\n",
       " 'atar',\n",
       " 'inirida',\n",
       " 'biankouma',\n",
       " 'georgetown',\n",
       " 'saint-philippe',\n",
       " 'upernavik',\n",
       " 'nagahama',\n",
       " 'pareora',\n",
       " 'muros',\n",
       " 'port hardy',\n",
       " 'panlaitan',\n",
       " 'sol-iletsk',\n",
       " 'barentsburg',\n",
       " 'thompson',\n",
       " 'nador',\n",
       " 'hays',\n",
       " 'poya',\n",
       " 'kahama',\n",
       " 'cape town',\n",
       " 'tsihombe',\n",
       " 'hofn',\n",
       " 'havre-saint-pierre',\n",
       " 'port elizabeth',\n",
       " 'lahij',\n",
       " 'batagay',\n",
       " 'florianopolis',\n",
       " 'charters towers',\n",
       " 'dikson',\n",
       " 'sitka',\n",
       " 'jiayuguan',\n",
       " 'denpasar',\n",
       " 'severo-kurilsk',\n",
       " 'livingstonia',\n",
       " 'arraial do cabo',\n",
       " 'aqtobe',\n",
       " 'khormuj',\n",
       " 'cooma',\n",
       " 'ornskoldsvik',\n",
       " 'cap-aux-meules',\n",
       " 'mahebourg',\n",
       " 'santa isabel do rio negro',\n",
       " 'guerrero negro',\n",
       " 'vasai',\n",
       " 'wuwei',\n",
       " 'husavik',\n",
       " 'butaritari',\n",
       " 'kutum',\n",
       " 'tianpeng',\n",
       " 'piuma',\n",
       " 'leeton',\n",
       " 'palabuhanratu',\n",
       " 'jurilovca',\n",
       " 'gat',\n",
       " 'grand gaube',\n",
       " 'slubice',\n",
       " 'sidi ali',\n",
       " 'cururupu',\n",
       " 'norman wells',\n",
       " 'saldanha',\n",
       " 'bengkulu',\n",
       " 'caravelas',\n",
       " 'ust-kan',\n",
       " 'la palma',\n",
       " 'come',\n",
       " 'sergeyevka',\n",
       " 'lethem',\n",
       " 'karatuzskoye',\n",
       " 'sladkovo',\n",
       " 'feijo',\n",
       " 'meadow lake',\n",
       " 'polunochnoye',\n",
       " 'vila velha',\n",
       " 'fortuna',\n",
       " 'huesca',\n",
       " 'saint george',\n",
       " 'deputatskiy',\n",
       " 'hobart',\n",
       " 'khatanga',\n",
       " 'igarka',\n",
       " 'longyearbyen',\n",
       " 'codrington',\n",
       " 'nizhneyansk',\n",
       " 'sentyabrskiy',\n",
       " 'bryan',\n",
       " 'pombas',\n",
       " 'sinnamary',\n",
       " 'marzuq',\n",
       " 'phalombe',\n",
       " 'kalmunai',\n",
       " 'portland',\n",
       " 'zunyi',\n",
       " 'rawson',\n",
       " 'beloha',\n",
       " 'kavaratti',\n",
       " 'ribeira grande',\n",
       " 'laguna',\n",
       " 'mae tha',\n",
       " 'coihaique',\n",
       " 'shu',\n",
       " 'hithadhoo',\n",
       " 'hilo',\n",
       " 'phitsanulok',\n",
       " 'ahipara',\n",
       " 'korla',\n",
       " 'avera',\n",
       " 'cidreira',\n",
       " 'voh',\n",
       " 'kodiak',\n",
       " 'castro',\n",
       " 'san patricio',\n",
       " 'sobolevo',\n",
       " 'griffith',\n",
       " 'rocha',\n",
       " 'tasiilaq',\n",
       " 'kaitangata',\n",
       " 'kingaroy',\n",
       " 'roald',\n",
       " 'louisbourg',\n",
       " 'estelle',\n",
       " 'emerald',\n",
       " 'lalomanu',\n",
       " 'urumqi',\n",
       " 'bethel',\n",
       " 'virginia beach',\n",
       " 'los llanos de aridane',\n",
       " 'phan thiet',\n",
       " 'sur',\n",
       " 'narsaq',\n",
       " 'kavieng',\n",
       " 'tautira',\n",
       " 'carnarvon',\n",
       " 'haines junction',\n",
       " 'dauphin',\n",
       " 'saurimo',\n",
       " 'nedjo',\n",
       " 'vestmannaeyjar',\n",
       " 'grindavik',\n",
       " 'belushya guba',\n",
       " 'cotacachi',\n",
       " 'saleaula',\n",
       " 'bilma',\n",
       " 'kokemaki',\n",
       " 'picota',\n",
       " 'santiago de cuba',\n",
       " 'berlevag',\n",
       " 'phnum penh',\n",
       " 'arica',\n",
       " 'tuatapere',\n",
       " 'tuggurt',\n",
       " 'mys shmidta',\n",
       " 'anloga',\n",
       " 'salamiyah',\n",
       " 'northam',\n",
       " 'luderitz',\n",
       " 'chokurdakh',\n",
       " 'belaya gora',\n",
       " 'grand river south east',\n",
       " 'bad frankenhausen',\n",
       " 'kysyl-syr',\n",
       " 'abu samrah',\n",
       " 'nhulunbuy',\n",
       " 'axim',\n",
       " 'zaysan',\n",
       " 'cap malheureux',\n",
       " 'contamana',\n",
       " 'mehamn',\n",
       " 'sataua',\n",
       " 'klaksvik',\n",
       " 'cayenne',\n",
       " 'huron',\n",
       " 'victoria',\n",
       " 'nouakchott',\n",
       " 'aksu',\n",
       " 'palencia',\n",
       " 'asau',\n",
       " 'geraldton',\n",
       " 'airai',\n",
       " 'moron',\n",
       " 'kota belud',\n",
       " 'pavlodar',\n",
       " 'hambantota',\n",
       " 'norwich',\n",
       " 'katsuura',\n",
       " 'faya',\n",
       " 'jiazi',\n",
       " 'canaway',\n",
       " 'nguiu',\n",
       " 'isla mujeres',\n",
       " 'batticaloa',\n",
       " 'east london',\n",
       " 'soyo',\n",
       " 'iracoubo',\n",
       " 'eyl',\n",
       " 'turukhansk',\n",
       " 'grootfontein',\n",
       " 'mao',\n",
       " 'tiksi',\n",
       " 'vilhena',\n",
       " 'san andres',\n",
       " 'inta',\n",
       " 'falam',\n",
       " 'fjerritslev',\n",
       " 'pueblo nuevo',\n",
       " 'dwarka',\n",
       " 'maputo',\n",
       " 'ostrovnoy',\n",
       " 'mount gambier',\n",
       " 'nago',\n",
       " 'nawabshah',\n",
       " 'paita',\n",
       " 'makakilo city',\n",
       " 'buala',\n",
       " 'tabas',\n",
       " 'zhigansk',\n",
       " 'toora-khem',\n",
       " 'arrecife',\n",
       " 'pocatello',\n",
       " 'shenjiamen',\n",
       " 'kamaishi',\n",
       " 'lafia',\n",
       " 'college',\n",
       " 'zhuhai',\n",
       " 'plettenberg bay',\n",
       " 'shahr-e babak',\n",
       " 'constantine',\n",
       " 'saint-augustin',\n",
       " 'ancud',\n",
       " 'natalio',\n",
       " 'pevek',\n",
       " 'ilhabela',\n",
       " 'mahajanga',\n",
       " 'kazalinsk',\n",
       " 'yaan',\n",
       " 'vostok',\n",
       " 'altay',\n",
       " 'san antonio',\n",
       " 'petropavlovsk-kamchatskiy',\n",
       " 'flagstaff',\n",
       " 'eureka',\n",
       " 'esso',\n",
       " 'otukpo',\n",
       " 'lorengau',\n",
       " 'hasaki',\n",
       " 'baykit',\n",
       " 'tokonou',\n",
       " 'bathsheba',\n",
       " 'dingle',\n",
       " 'dergaon',\n",
       " 'waingapu',\n",
       " 'san luis',\n",
       " 'zemio',\n",
       " 'ucluelet',\n",
       " 'goldap',\n",
       " 'tumannyy',\n",
       " 'hutchinson',\n",
       " 'indramayu',\n",
       " 'sorland',\n",
       " 'sinjar',\n",
       " 'batagay-alyta',\n",
       " 'nyamuswa',\n",
       " 'kondinskoye',\n",
       " 'summerville',\n",
       " 'marcona',\n",
       " 'kununurra',\n",
       " 'nyamati',\n",
       " 'necochea',\n",
       " 'broken hill',\n",
       " 'labuhan',\n",
       " 'lompoc',\n",
       " 'mragowo',\n",
       " 'lazaro cardenas',\n",
       " 'sovetskiy',\n",
       " 'vestmanna',\n",
       " 'lavrentiya',\n",
       " 'noumea',\n",
       " 'rumonge',\n",
       " 'port moresby',\n",
       " 'muzhi',\n",
       " 'luocheng',\n",
       " 'saint anthony',\n",
       " 'ciamis',\n",
       " 'kachikau',\n",
       " 'constitucion',\n",
       " 'fukue',\n",
       " 'lagoa',\n",
       " 'atambua',\n",
       " 'pacific grove',\n",
       " 'vila franca do campo',\n",
       " 'esmeraldas',\n",
       " 'kaniama',\n",
       " 'amderma',\n",
       " 'ola',\n",
       " 'meulaboh',\n",
       " 'lasa',\n",
       " 'quelimane',\n",
       " 'sioux lookout',\n",
       " 'okhotsk',\n",
       " 'khawhai',\n",
       " 'prince albert',\n",
       " 'shimoda',\n",
       " 'consolacion del sur',\n",
       " 'attawapiskat',\n",
       " 'richards bay',\n",
       " 'litovko',\n",
       " 'eydhafushi',\n",
       " 'polovragi',\n",
       " 'marquette',\n",
       " 'mount vernon',\n",
       " 'yumen',\n",
       " 'vilyuysk',\n",
       " 'soeng sang',\n",
       " 'road town',\n",
       " 'bekwai',\n",
       " 'linhares',\n",
       " 'balabac',\n",
       " 'kushiro',\n",
       " 'sale',\n",
       " 'ritchie',\n",
       " 'serenje',\n",
       " 'simbahan',\n",
       " 'broome',\n",
       " 'hornepayne',\n",
       " 'ruatoria',\n",
       " 'dali',\n",
       " 'dunedin',\n",
       " 'te anau',\n",
       " 'bafra',\n",
       " 'quatre cocos',\n",
       " 'coahuayana',\n",
       " 'pierre',\n",
       " 'star',\n",
       " 'ust-kamchatsk',\n",
       " 'joliette',\n",
       " 'olbia',\n",
       " 'gawler',\n",
       " 'hirara',\n",
       " 'kloulklubed',\n",
       " 'opotiki',\n",
       " 'sorvag',\n",
       " 'michigan city',\n",
       " 'bereda',\n",
       " 'victor harbor',\n",
       " 'dodola',\n",
       " 'fort nelson',\n",
       " 'abu dhabi',\n",
       " 'salgueiro',\n",
       " 'jizan',\n",
       " 'itoman',\n",
       " 'karkaralinsk',\n",
       " 'chicama',\n",
       " 'chapleau',\n",
       " 'lebu',\n",
       " 'takoradi',\n",
       " 'malazgirt',\n",
       " 'walvis bay',\n",
       " 'fairbanks',\n",
       " 'moose factory',\n",
       " 'camana',\n",
       " 'san cristobal',\n",
       " 'sao jose da coroa grande',\n",
       " 'gondanglegi',\n",
       " 'samarai',\n",
       " 'barao de melgaco',\n",
       " 'mackay',\n",
       " 'vaitupu',\n",
       " 'kahului',\n",
       " 'lakes entrance',\n",
       " 'ajdabiya',\n",
       " 'kaeo',\n",
       " 'mokshan',\n",
       " 'chumikan',\n",
       " 'chitipa',\n",
       " 'carutapera',\n",
       " 'port blair',\n",
       " 'ambon',\n",
       " 'ngukurr',\n",
       " 'isilkul',\n",
       " 'hobyo',\n",
       " 'fort smith',\n",
       " 'pauini',\n",
       " 'tura',\n",
       " 'bandarbeyla',\n",
       " 'gilleleje',\n",
       " 'sistranda',\n",
       " 'henties bay',\n",
       " 'katobu',\n",
       " 'kirkuk',\n",
       " 'villa rica',\n",
       " 'glenwood springs',\n",
       " 'gushikawa',\n",
       " 'bandar',\n",
       " 'nabire',\n",
       " 'dillon',\n",
       " 'hami',\n",
       " 'kawalu',\n",
       " 'pishin',\n",
       " 'mutis',\n",
       " 'hovd',\n",
       " 'sumenep',\n",
       " 'tukrah',\n",
       " 'svetlaya',\n",
       " 'nanfeng',\n",
       " 'biltine',\n",
       " 'kuche',\n",
       " 'sarangani',\n",
       " 'kang',\n",
       " 'pimentel',\n",
       " 'tacoronte',\n",
       " 'aguilas',\n",
       " 'bowen',\n",
       " 'lata',\n",
       " 'babanka',\n",
       " 'rawlins',\n",
       " 'gulu',\n",
       " 'pisco',\n",
       " 'burica',\n",
       " 'saint-joseph',\n",
       " 'arinos',\n",
       " 'port alberni',\n",
       " 'alofi',\n",
       " 'umzimvubu',\n",
       " 'suruc',\n",
       " 'taburi',\n",
       " 'itupiranga',\n",
       " 'phuket',\n",
       " 'sofiysk',\n",
       " 'faanui',\n",
       " 'padang',\n",
       " 'berdigestyakh',\n",
       " 'hamilton',\n",
       " 'kruisfontein',\n",
       " 'torbay',\n",
       " 'keetmanshoop',\n",
       " 'meyungs',\n",
       " 'satitoa',\n",
       " 'asadabad',\n",
       " 'sirjan',\n",
       " 'tiznit',\n",
       " 'nizhniy kuranakh',\n",
       " 'mount isa',\n",
       " 'alyangula',\n",
       " 'zheshart',\n",
       " 'dinsor',\n",
       " 'tori',\n",
       " 'amga',\n",
       " 'san policarpo',\n",
       " 'makung',\n",
       " 'wahran',\n",
       " 'marienburg',\n",
       " 'nemuro',\n",
       " 'belmonte',\n",
       " 'toliary',\n",
       " 'leningradskiy',\n",
       " 'batsfjord',\n",
       " 'visnes',\n",
       " 'derzhavinsk',\n",
       " 'thinadhoo',\n",
       " 'anadyr',\n",
       " 'krasnoselkup',\n",
       " 'caxias',\n",
       " 'san pedro',\n",
       " 'skjervoy',\n",
       " 'kenai',\n",
       " 'kushima',\n",
       " 'santo antonio',\n",
       " 'buarcos',\n",
       " 'suzun',\n",
       " 'clyde river',\n",
       " 'chapais',\n",
       " 'havelock',\n",
       " 'taltal',\n",
       " 'palana',\n",
       " 'slantsy',\n",
       " 'pangnirtung',\n",
       " 'praia da vitoria',\n",
       " 'tombouctou',\n",
       " 'aguimes',\n",
       " 'juneau',\n",
       " 'sainte-anne-des-monts',\n",
       " 'catuday',\n",
       " 'mangrol',\n",
       " 'inuvik',\n",
       " 'edd',\n",
       " 'bonavista',\n",
       " 'ramshir',\n",
       " 'saryshagan',\n",
       " 'lucapa',\n",
       " 'shawnee',\n",
       " 'halalo',\n",
       " 'povenets',\n",
       " 'peniche',\n",
       " 'balkanabat',\n",
       " 'warqla',\n",
       " 'andenes',\n",
       " 'malanville',\n",
       " 'kilimatinde',\n",
       " 'waipawa',\n",
       " 'arak',\n",
       " 'tubruq',\n",
       " 'mocambique',\n",
       " 'teguise',\n",
       " 'vysokogornyy',\n",
       " 'pokrovsk',\n",
       " 'rogers',\n",
       " 'antofagasta',\n",
       " 'ardistan',\n",
       " 'oskarshamn',\n",
       " 'key largo',\n",
       " 'maniitsoq',\n",
       " 'solnechnyy',\n",
       " 'todos santos',\n",
       " 'baghdad',\n",
       " 'merauke',\n",
       " 'leh']"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = \"http://api.openweathermap.org/data/2.5/weather?\"\n",
    "units = \"metric\"\n",
    "query_url = f\"{url}appid={api_key}&units={units}&q=\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beginning Data Retrieval\n",
      "----------------------------\n",
      "Processing Record for: akropong\n",
      "Processing Record for: nemencine\n",
      "Processing Record for: lewistown\n",
      "Processing Record for: mar del plata\n",
      "Processing Record for: narrabri\n",
      "Processing Record for: nikolskoye\n",
      "Processing Record for: atuona\n",
      "Processing Record for: naryan-mar\n",
      "Processing Record for: naze\n",
      "Processing Record for: alice springs\n",
      "Processing Record for: uarini\n",
      "Processing Record for: kapaa\n",
      "Processing Record for: barrow\n",
      "Processing Record for: yulara\n",
      "Processing Record for: busselton\n",
      "Processing Record for: miami\n",
      "Processing Record for: namatanai\n",
      "Processing Record for: porto novo\n",
      "Processing Record for: bambous virieux\n",
      "Processing Record for: yellowknife\n",
      "Processing Record for: saskylakh\n",
      "Processing Record for: isangel\n",
      "Processing Record for: ternate\n",
      "Processing Record for: iqaluit\n",
      "Processing Record for: rio grande\n",
      "Processing Record for: mataura\n",
      "Processing Record for: ponta do sol\n",
      "Processing Record for: aklavik\n",
      "Processing Record for: trincomalee\n",
      "Processing Record for: vaini\n",
      "Processing Record for: albany\n",
      "Processing Record for: ixtapa\n",
      "Processing Record for: srednekolymsk\n",
      "Processing Record for: inhambane\n",
      "Processing Record for: cabo san lucas\n",
      "Processing Record for: ushuaia\n",
      "Processing Record for: tucurui\n",
      "Processing Record for: rikitea\n",
      "Processing Record for: kundiawa\n",
      "Processing Record for: puerto ayora\n",
      "Processing Record for: punta arenas\n",
      "Processing Record for: sao filipe\n",
      "Processing Record for: bredasdorp\n",
      "Processing Record for: chuy\n",
      "Processing Record for: talnakh\n",
      "Processing Record for: camacha\n",
      "Processing Record for: cherskiy\n",
      "Processing Record for: ugoofaaru\n",
      "Processing Record for: qaanaaq\n",
      "Processing Record for: galveston\n",
      "Processing Record for: hermanus\n",
      "Processing Record for: ewa beach\n",
      "Processing Record for: port-cartier\n",
      "Processing Record for: nanchang\n",
      "Processing Record for: penzance\n",
      "Processing Record for: kita\n",
      "Processing Record for: tsogni\n",
      "Processing Record for: bluff\n",
      "Processing Record for: digoin\n",
      "Processing Record for: baruun-urt\n",
      "Processing Record for: tecoanapa\n",
      "Processing Record for: kiunga\n",
      "Processing Record for: polovinnoye\n",
      "Processing Record for: ilulissat\n",
      "Processing Record for: avarua\n",
      "Processing Record for: tuktoyaktuk\n",
      "Processing Record for: chara\n",
      "Processing Record for: traverse city\n",
      "Processing Record for: jamestown\n",
      "Processing Record for: nanortalik\n",
      "Processing Record for: port alfred\n",
      "Processing Record for: vao\n",
      "Processing Record for: beringovskiy\n",
      "Processing Record for: new norfolk\n",
      "Processing Record for: san jose\n",
      "Processing Record for: jackson\n",
      "Processing Record for: provideniya\n",
      "Processing Record for: yerbogachen\n",
      "Processing Record for: atar\n",
      "Processing Record for: inirida\n",
      "Processing Record for: biankouma\n",
      "Processing Record for: georgetown\n",
      "Processing Record for: saint-philippe\n",
      "Processing Record for: upernavik\n",
      "Processing Record for: nagahama\n",
      "Processing Record for: pareora\n",
      "Processing Record for: muros\n",
      "Processing Record for: port hardy\n",
      "Processing Record for: panlaitan\n",
      "Processing Record for: sol-iletsk\n",
      "Processing Record for: thompson\n",
      "Processing Record for: nador\n",
      "Processing Record for: hays\n",
      "Processing Record for: poya\n",
      "Processing Record for: kahama\n",
      "Processing Record for: cape town\n",
      "Processing Record for: hofn\n",
      "Processing Record for: havre-saint-pierre\n",
      "Processing Record for: port elizabeth\n",
      "Processing Record for: lahij\n",
      "Processing Record for: batagay\n",
      "Processing Record for: florianopolis\n",
      "Processing Record for: charters towers\n",
      "Processing Record for: dikson\n",
      "Processing Record for: sitka\n",
      "Processing Record for: jiayuguan\n",
      "Processing Record for: denpasar\n",
      "Processing Record for: severo-kurilsk\n",
      "Processing Record for: livingstonia\n",
      "Processing Record for: arraial do cabo\n",
      "Processing Record for: aqtobe\n",
      "Processing Record for: cooma\n",
      "Processing Record for: ornskoldsvik\n",
      "Processing Record for: cap-aux-meules\n",
      "Processing Record for: mahebourg\n",
      "Processing Record for: santa isabel do rio negro\n",
      "Processing Record for: guerrero negro\n",
      "Processing Record for: vasai\n",
      "Processing Record for: wuwei\n",
      "Processing Record for: husavik\n",
      "Processing Record for: butaritari\n",
      "Processing Record for: kutum\n",
      "Processing Record for: tianpeng\n",
      "Processing Record for: piuma\n",
      "Processing Record for: leeton\n",
      "Processing Record for: jurilovca\n",
      "Processing Record for: gat\n",
      "Processing Record for: grand gaube\n",
      "Processing Record for: slubice\n",
      "Processing Record for: sidi ali\n",
      "Processing Record for: cururupu\n",
      "Processing Record for: norman wells\n",
      "Processing Record for: saldanha\n",
      "Processing Record for: caravelas\n",
      "Processing Record for: ust-kan\n",
      "Processing Record for: la palma\n",
      "Processing Record for: come\n",
      "Processing Record for: sergeyevka\n",
      "Processing Record for: lethem\n",
      "Processing Record for: karatuzskoye\n",
      "Processing Record for: sladkovo\n",
      "Processing Record for: feijo\n",
      "Processing Record for: meadow lake\n",
      "Processing Record for: polunochnoye\n",
      "Processing Record for: vila velha\n",
      "Processing Record for: fortuna\n",
      "Processing Record for: huesca\n",
      "Processing Record for: saint george\n",
      "Processing Record for: deputatskiy\n",
      "Processing Record for: hobart\n",
      "Processing Record for: khatanga\n",
      "Processing Record for: igarka\n",
      "Processing Record for: longyearbyen\n",
      "Processing Record for: codrington\n",
      "Processing Record for: bryan\n",
      "Processing Record for: pombas\n",
      "Processing Record for: sinnamary\n",
      "Processing Record for: marzuq\n",
      "Processing Record for: phalombe\n",
      "Processing Record for: kalmunai\n",
      "Processing Record for: portland\n",
      "Processing Record for: zunyi\n",
      "Processing Record for: rawson\n",
      "Processing Record for: beloha\n",
      "Processing Record for: kavaratti\n",
      "Processing Record for: ribeira grande\n",
      "Processing Record for: laguna\n",
      "Processing Record for: mae tha\n",
      "Processing Record for: coihaique\n",
      "Processing Record for: shu\n",
      "Processing Record for: hithadhoo\n",
      "Processing Record for: hilo\n",
      "Processing Record for: phitsanulok\n",
      "Processing Record for: ahipara\n",
      "Processing Record for: avera\n",
      "Processing Record for: cidreira\n",
      "Processing Record for: voh\n",
      "Processing Record for: kodiak\n",
      "Processing Record for: castro\n",
      "Processing Record for: san patricio\n",
      "Processing Record for: sobolevo\n",
      "Processing Record for: griffith\n",
      "Processing Record for: rocha\n",
      "Processing Record for: tasiilaq\n",
      "Processing Record for: kaitangata\n",
      "Processing Record for: kingaroy\n",
      "Processing Record for: roald\n",
      "Processing Record for: estelle\n",
      "Processing Record for: emerald\n",
      "Processing Record for: bethel\n",
      "Processing Record for: virginia beach\n",
      "Processing Record for: los llanos de aridane\n",
      "Processing Record for: phan thiet\n",
      "Processing Record for: sur\n",
      "Processing Record for: narsaq\n",
      "Processing Record for: kavieng\n",
      "Processing Record for: tautira\n",
      "Processing Record for: carnarvon\n",
      "Processing Record for: haines junction\n",
      "Processing Record for: dauphin\n",
      "Processing Record for: saurimo\n",
      "Processing Record for: nedjo\n",
      "Processing Record for: vestmannaeyjar\n",
      "Processing Record for: grindavik\n",
      "Processing Record for: cotacachi\n",
      "Processing Record for: bilma\n",
      "Processing Record for: kokemaki\n",
      "Processing Record for: picota\n",
      "Processing Record for: santiago de cuba\n",
      "Processing Record for: berlevag\n",
      "Processing Record for: arica\n",
      "Processing Record for: tuatapere\n",
      "Processing Record for: anloga\n",
      "Processing Record for: salamiyah\n",
      "Processing Record for: northam\n",
      "Processing Record for: luderitz\n",
      "Processing Record for: chokurdakh\n",
      "Processing Record for: belaya gora\n",
      "Processing Record for: bad frankenhausen\n",
      "Processing Record for: kysyl-syr\n",
      "Processing Record for: abu samrah\n",
      "Processing Record for: nhulunbuy\n",
      "Processing Record for: axim\n",
      "Processing Record for: zaysan\n",
      "Processing Record for: cap malheureux\n",
      "Processing Record for: contamana\n",
      "Processing Record for: mehamn\n",
      "Processing Record for: klaksvik\n",
      "Processing Record for: cayenne\n",
      "Processing Record for: huron\n",
      "Processing Record for: victoria\n",
      "Processing Record for: nouakchott\n",
      "Processing Record for: aksu\n",
      "Processing Record for: palencia\n",
      "Processing Record for: geraldton\n",
      "Processing Record for: airai\n",
      "Processing Record for: moron\n",
      "Processing Record for: kota belud\n",
      "Processing Record for: pavlodar\n",
      "Processing Record for: hambantota\n",
      "Processing Record for: norwich\n",
      "Processing Record for: katsuura\n",
      "Processing Record for: faya\n",
      "Processing Record for: jiazi\n",
      "Processing Record for: canaway\n",
      "Processing Record for: isla mujeres\n",
      "Processing Record for: batticaloa\n",
      "Processing Record for: east london\n",
      "Processing Record for: soyo\n",
      "Processing Record for: iracoubo\n",
      "Processing Record for: eyl\n",
      "Processing Record for: turukhansk\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing Record for: grootfontein\n",
      "Processing Record for: mao\n",
      "Processing Record for: tiksi\n",
      "Processing Record for: vilhena\n",
      "Processing Record for: san andres\n",
      "Processing Record for: inta\n",
      "Processing Record for: falam\n",
      "Processing Record for: fjerritslev\n",
      "Processing Record for: pueblo nuevo\n",
      "Processing Record for: dwarka\n",
      "Processing Record for: maputo\n",
      "Processing Record for: ostrovnoy\n",
      "Processing Record for: mount gambier\n",
      "Processing Record for: nago\n",
      "Processing Record for: nawabshah\n",
      "Processing Record for: paita\n",
      "Processing Record for: makakilo city\n",
      "Processing Record for: buala\n",
      "Processing Record for: tabas\n",
      "Processing Record for: zhigansk\n",
      "Processing Record for: toora-khem\n",
      "Processing Record for: pocatello\n",
      "Processing Record for: shenjiamen\n",
      "Processing Record for: kamaishi\n",
      "Processing Record for: lafia\n",
      "Processing Record for: college\n",
      "Processing Record for: zhuhai\n",
      "Processing Record for: plettenberg bay\n",
      "Processing Record for: shahr-e babak\n",
      "Processing Record for: constantine\n",
      "Processing Record for: saint-augustin\n",
      "Processing Record for: ancud\n",
      "Processing Record for: natalio\n",
      "Processing Record for: pevek\n",
      "Processing Record for: ilhabela\n",
      "Processing Record for: mahajanga\n",
      "Processing Record for: yaan\n",
      "Processing Record for: vostok\n",
      "Processing Record for: altay\n",
      "Processing Record for: san antonio\n",
      "Processing Record for: petropavlovsk-kamchatskiy\n",
      "Processing Record for: flagstaff\n",
      "Processing Record for: eureka\n",
      "Processing Record for: esso\n",
      "Processing Record for: otukpo\n",
      "Processing Record for: lorengau\n",
      "Processing Record for: hasaki\n",
      "Processing Record for: baykit\n",
      "Processing Record for: tokonou\n",
      "Processing Record for: bathsheba\n",
      "Processing Record for: dingle\n",
      "Processing Record for: dergaon\n",
      "Processing Record for: waingapu\n",
      "Processing Record for: san luis\n",
      "Processing Record for: zemio\n",
      "Processing Record for: ucluelet\n",
      "Processing Record for: goldap\n",
      "Processing Record for: hutchinson\n",
      "Processing Record for: indramayu\n",
      "Processing Record for: sorland\n",
      "Processing Record for: sinjar\n",
      "Processing Record for: batagay-alyta\n",
      "Processing Record for: nyamuswa\n",
      "Processing Record for: kondinskoye\n",
      "Processing Record for: summerville\n",
      "Processing Record for: kununurra\n",
      "Processing Record for: nyamati\n",
      "Processing Record for: necochea\n",
      "Processing Record for: broken hill\n",
      "Processing Record for: labuhan\n",
      "Processing Record for: lompoc\n",
      "Processing Record for: mragowo\n",
      "Processing Record for: lazaro cardenas\n",
      "Processing Record for: sovetskiy\n",
      "Processing Record for: vestmanna\n",
      "Processing Record for: lavrentiya\n",
      "Processing Record for: noumea\n",
      "Processing Record for: rumonge\n",
      "Processing Record for: port moresby\n",
      "Processing Record for: muzhi\n",
      "Processing Record for: luocheng\n",
      "Processing Record for: saint anthony\n",
      "Processing Record for: ciamis\n",
      "Processing Record for: constitucion\n",
      "Processing Record for: fukue\n",
      "Processing Record for: lagoa\n",
      "Processing Record for: atambua\n",
      "Processing Record for: pacific grove\n",
      "Processing Record for: vila franca do campo\n",
      "Processing Record for: esmeraldas\n",
      "Processing Record for: kaniama\n",
      "Processing Record for: ola\n",
      "Processing Record for: meulaboh\n",
      "Processing Record for: lasa\n",
      "Processing Record for: quelimane\n",
      "Processing Record for: sioux lookout\n",
      "Processing Record for: okhotsk\n",
      "Processing Record for: khawhai\n",
      "Processing Record for: prince albert\n",
      "Processing Record for: shimoda\n",
      "Processing Record for: consolacion del sur\n",
      "Processing Record for: richards bay\n",
      "Processing Record for: litovko\n",
      "Processing Record for: eydhafushi\n",
      "Processing Record for: polovragi\n",
      "Processing Record for: marquette\n",
      "Processing Record for: mount vernon\n",
      "Processing Record for: yumen\n",
      "Processing Record for: vilyuysk\n",
      "Processing Record for: soeng sang\n",
      "Processing Record for: road town\n",
      "Processing Record for: bekwai\n",
      "Processing Record for: linhares\n",
      "Processing Record for: balabac\n",
      "Processing Record for: kushiro\n",
      "Processing Record for: sale\n",
      "Processing Record for: ritchie\n",
      "Processing Record for: serenje\n",
      "Processing Record for: simbahan\n",
      "Processing Record for: broome\n",
      "Processing Record for: hornepayne\n",
      "Processing Record for: dali\n",
      "Processing Record for: dunedin\n",
      "Processing Record for: te anau\n",
      "Processing Record for: bafra\n",
      "Processing Record for: quatre cocos\n",
      "Processing Record for: coahuayana\n",
      "Processing Record for: pierre\n",
      "Processing Record for: star\n",
      "Processing Record for: joliette\n",
      "Processing Record for: olbia\n",
      "Processing Record for: gawler\n",
      "Processing Record for: hirara\n",
      "Processing Record for: kloulklubed\n",
      "Processing Record for: opotiki\n",
      "Processing Record for: michigan city\n",
      "Processing Record for: bereda\n",
      "Processing Record for: victor harbor\n",
      "Processing Record for: dodola\n",
      "Processing Record for: fort nelson\n",
      "Processing Record for: abu dhabi\n",
      "Processing Record for: salgueiro\n",
      "Processing Record for: jizan\n",
      "Processing Record for: itoman\n",
      "Processing Record for: chicama\n",
      "Processing Record for: chapleau\n",
      "Processing Record for: lebu\n",
      "Processing Record for: takoradi\n",
      "Processing Record for: malazgirt\n",
      "Processing Record for: walvis bay\n",
      "Processing Record for: fairbanks\n",
      "Processing Record for: moose factory\n",
      "Processing Record for: san cristobal\n",
      "Processing Record for: sao jose da coroa grande\n",
      "Processing Record for: gondanglegi\n",
      "Processing Record for: samarai\n",
      "Processing Record for: barao de melgaco\n",
      "Processing Record for: mackay\n",
      "Processing Record for: kahului\n",
      "Processing Record for: lakes entrance\n",
      "Processing Record for: ajdabiya\n",
      "Processing Record for: kaeo\n",
      "Processing Record for: mokshan\n",
      "Processing Record for: chumikan\n",
      "Processing Record for: chitipa\n",
      "Processing Record for: carutapera\n",
      "Processing Record for: port blair\n",
      "Processing Record for: ambon\n",
      "Processing Record for: isilkul\n",
      "Processing Record for: hobyo\n",
      "Processing Record for: fort smith\n",
      "Processing Record for: pauini\n",
      "Processing Record for: tura\n",
      "Processing Record for: bandarbeyla\n",
      "Processing Record for: gilleleje\n",
      "Processing Record for: sistranda\n",
      "Processing Record for: henties bay\n",
      "Processing Record for: katobu\n",
      "Processing Record for: kirkuk\n",
      "Processing Record for: villa rica\n",
      "Processing Record for: glenwood springs\n",
      "Processing Record for: gushikawa\n",
      "Processing Record for: bandar\n",
      "Processing Record for: nabire\n",
      "Processing Record for: dillon\n",
      "Processing Record for: hami\n",
      "Processing Record for: kawalu\n",
      "Processing Record for: pishin\n",
      "Processing Record for: mutis\n",
      "Processing Record for: hovd\n",
      "Processing Record for: sumenep\n",
      "Processing Record for: svetlaya\n",
      "Processing Record for: nanfeng\n",
      "Processing Record for: biltine\n",
      "Processing Record for: sarangani\n",
      "Processing Record for: kang\n",
      "Processing Record for: pimentel\n",
      "Processing Record for: tacoronte\n",
      "Processing Record for: aguilas\n",
      "Processing Record for: bowen\n",
      "Processing Record for: lata\n",
      "Processing Record for: babanka\n",
      "Processing Record for: rawlins\n",
      "Processing Record for: gulu\n",
      "Processing Record for: pisco\n",
      "Processing Record for: saint-joseph\n",
      "Processing Record for: arinos\n",
      "Processing Record for: port alberni\n",
      "Processing Record for: alofi\n",
      "Processing Record for: suruc\n",
      "Processing Record for: itupiranga\n",
      "Processing Record for: phuket\n",
      "Processing Record for: faanui\n",
      "Processing Record for: padang\n",
      "Processing Record for: berdigestyakh\n",
      "Processing Record for: hamilton\n",
      "Processing Record for: kruisfontein\n",
      "Processing Record for: torbay\n",
      "Processing Record for: keetmanshoop\n",
      "Processing Record for: asadabad\n",
      "Processing Record for: sirjan\n",
      "Processing Record for: tiznit\n",
      "Processing Record for: nizhniy kuranakh\n",
      "Processing Record for: mount isa\n",
      "Processing Record for: alyangula\n",
      "Processing Record for: zheshart\n",
      "Processing Record for: tori\n",
      "Processing Record for: amga\n",
      "Processing Record for: san policarpo\n",
      "Processing Record for: marienburg\n",
      "Processing Record for: nemuro\n",
      "Processing Record for: belmonte\n",
      "Processing Record for: leningradskiy\n",
      "Processing Record for: batsfjord\n",
      "Processing Record for: visnes\n",
      "Processing Record for: derzhavinsk\n",
      "Processing Record for: thinadhoo\n",
      "Processing Record for: anadyr\n",
      "Processing Record for: caxias\n",
      "Processing Record for: san pedro\n",
      "Processing Record for: skjervoy\n",
      "Processing Record for: kenai\n",
      "Processing Record for: kushima\n",
      "Processing Record for: santo antonio\n",
      "Processing Record for: buarcos\n",
      "Processing Record for: suzun\n",
      "Processing Record for: clyde river\n",
      "Processing Record for: chapais\n",
      "Processing Record for: havelock\n",
      "Processing Record for: taltal\n",
      "Processing Record for: palana\n",
      "Processing Record for: slantsy\n",
      "Processing Record for: pangnirtung\n",
      "Processing Record for: praia da vitoria\n",
      "Processing Record for: tombouctou\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Processing Record for: aguimes\n",
      "Processing Record for: juneau\n",
      "Processing Record for: sainte-anne-des-monts\n",
      "Processing Record for: catuday\n",
      "Processing Record for: mangrol\n",
      "Processing Record for: inuvik\n",
      "Processing Record for: edd\n",
      "Processing Record for: bonavista\n",
      "Processing Record for: ramshir\n",
      "Processing Record for: lucapa\n",
      "Processing Record for: shawnee\n",
      "Processing Record for: povenets\n",
      "Processing Record for: peniche\n",
      "Processing Record for: balkanabat\n",
      "Processing Record for: malanville\n",
      "Processing Record for: kilimatinde\n",
      "Processing Record for: waipawa\n",
      "Processing Record for: arak\n",
      "Processing Record for: teguise\n",
      "Processing Record for: vysokogornyy\n",
      "Processing Record for: pokrovsk\n",
      "Processing Record for: rogers\n",
      "Processing Record for: antofagasta\n",
      "Processing Record for: oskarshamn\n",
      "Processing Record for: key largo\n",
      "Processing Record for: maniitsoq\n",
      "Processing Record for: solnechnyy\n",
      "Processing Record for: todos santos\n",
      "Processing Record for: baghdad\n",
      "Processing Record for: merauke\n",
      "Processing Record for: leh\n"
     ]
    }
   ],
   "source": [
    "# This could take a minute...  I am filling the lists \n",
    "# for all of the dataframe objects from within the loop.\n",
    "# The try / except / continue script that \n",
    "# I'm using is eliminating any entry without data!\n",
    "\n",
    "City = []\n",
    "Country = []\n",
    "Lat = []\n",
    "Lng = []\n",
    "Date = []\n",
    "Descript = []\n",
    "Cloudiness = []\n",
    "Max_Temp = []\n",
    "Humidity = []\n",
    "Wind_Speed = []\n",
    "response = []\n",
    "print('Beginning Data Retrieval')\n",
    "print('----------------------------')\n",
    "for i in range (len(cities)):\n",
    "    response.append(requests.get(query_url + cities[i]).json())\n",
    "    try: \n",
    "        City.append(response[i][\"name\"])\n",
    "        Country.append(response[i]['sys']['country'])\n",
    "        Lat.append(response[i]['coord']['lat'])\n",
    "        Lng.append(response[i]['coord']['lon'])\n",
    "        Date.append(response[i]['sys']['sunrise'])\n",
    "        Descript.append(response[i]['weather'][0]['description'])\n",
    "        Cloudiness.append(response[i]['clouds']['all'])\n",
    "        Max_Temp.append(response[i]['main']['temp_max'])\n",
    "        Humidity.append(response[i]['main']['humidity'])\n",
    "        Wind_Speed.append(response[i]['wind']['speed'])\n",
    "    except:\n",
    "        continue\n",
    "    print(f'Processing Record for: '+ cities[i]) \n",
    "    i+=1\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "599"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(response)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(City)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Country)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Lat)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Lng)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Date)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Descript)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Cloudiness)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Max_Temp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Humidity)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "538"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(Wind_Speed)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# print(json.dumps(response, indent=4, sort_keys=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'coord': {'lon': -0.09, 'lat': 5.97}, 'weather': [{'id': 800, 'main': 'Clear', 'description': 'clear sky', 'icon': '01n'}], 'base': 'stations', 'main': {'temp': 25, 'pressure': 1016, 'humidity': 83, 'temp_min': 25, 'temp_max': 25}, 'visibility': 10000, 'wind': {'speed': 5.1, 'deg': 240}, 'clouds': {'all': 0}, 'dt': 1567985244, 'sys': {'type': 1, 'id': 1126, 'message': 0.006, 'country': 'GH', 'sunrise': 1567921955, 'sunset': 1567965850}, 'timezone': 0, 'id': 2305027, 'name': 'Akropong', 'cod': 200}\n"
     ]
    }
   ],
   "source": [
    "print(response[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys(['coord', 'weather', 'base', 'main', 'visibility', 'wind', 'clouds', 'dt', 'sys', 'timezone', 'id', 'name', 'cod'])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0].keys()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Akropong'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0][\"name\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'clear sky'"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['weather'][0]['description']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['clouds']['all']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'temp': 25, 'pressure': 1016, 'humidity': 83, 'temp_min': 25, 'temp_max': 25}"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['main']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['main']['temp']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "83"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['main']['humidity']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['main']['temp_max']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'GH'"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['sys']['country']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1567921955"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['sys']['sunrise']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.1"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['wind']['speed']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-0.09"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['coord']['lon']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5.97"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "response[0]['coord']['lat']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Convert Raw Data to DataFrame\n",
    "* Export the city data into a .csv.\n",
    "* Display the DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Lng</th>\n",
       "      <th>Date</th>\n",
       "      <th>Descript</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>Max_Temp</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Wind_Speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Akropong</td>\n",
       "      <td>GH</td>\n",
       "      <td>5.97</td>\n",
       "      <td>-0.09</td>\n",
       "      <td>1567921955</td>\n",
       "      <td>clear sky</td>\n",
       "      <td>0</td>\n",
       "      <td>25.00</td>\n",
       "      <td>83</td>\n",
       "      <td>5.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Nemencine</td>\n",
       "      <td>LT</td>\n",
       "      <td>54.85</td>\n",
       "      <td>25.48</td>\n",
       "      <td>1568000325</td>\n",
       "      <td>clear sky</td>\n",
       "      <td>0</td>\n",
       "      <td>16.00</td>\n",
       "      <td>82</td>\n",
       "      <td>2.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Lewistown</td>\n",
       "      <td>US</td>\n",
       "      <td>40.39</td>\n",
       "      <td>-90.15</td>\n",
       "      <td>1567942477</td>\n",
       "      <td>overcast clouds</td>\n",
       "      <td>90</td>\n",
       "      <td>22.00</td>\n",
       "      <td>88</td>\n",
       "      <td>2.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mar del Plata</td>\n",
       "      <td>AR</td>\n",
       "      <td>-46.43</td>\n",
       "      <td>-67.52</td>\n",
       "      <td>1567939643</td>\n",
       "      <td>overcast clouds</td>\n",
       "      <td>98</td>\n",
       "      <td>8.64</td>\n",
       "      <td>56</td>\n",
       "      <td>3.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Narrabri</td>\n",
       "      <td>AU</td>\n",
       "      <td>-30.33</td>\n",
       "      <td>149.78</td>\n",
       "      <td>1567973276</td>\n",
       "      <td>clear sky</td>\n",
       "      <td>0</td>\n",
       "      <td>12.22</td>\n",
       "      <td>53</td>\n",
       "      <td>5.70</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            City Country    Lat     Lng        Date         Descript  \\\n",
       "0       Akropong      GH   5.97   -0.09  1567921955        clear sky   \n",
       "1      Nemencine      LT  54.85   25.48  1568000325        clear sky   \n",
       "2      Lewistown      US  40.39  -90.15  1567942477  overcast clouds   \n",
       "3  Mar del Plata      AR -46.43  -67.52  1567939643  overcast clouds   \n",
       "4       Narrabri      AU -30.33  149.78  1567973276        clear sky   \n",
       "\n",
       "   Cloudiness  Max_Temp  Humidity  Wind_Speed  \n",
       "0           0     25.00        83        5.10  \n",
       "1           0     16.00        82        2.60  \n",
       "2          90     22.00        88        2.60  \n",
       "3          98      8.64        56        3.65  \n",
       "4           0     12.22        53        5.70  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Weather={\n",
    "    'City':City,\n",
    "    'Country':Country,\n",
    "    'Lat':Lat,\n",
    "    'Lng':Lng,\n",
    "    'Date':Date,\n",
    "    'Descript':Descript,\n",
    "    'Cloudiness':Cloudiness,\n",
    "    'Max_Temp':Max_Temp,\n",
    "    'Humidity':Humidity,\n",
    "    'Wind_Speed':Wind_Speed    \n",
    "}\n",
    "WDF = pd.DataFrame(Weather)\n",
    "WDF.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [],
   "source": [
    "WDF['Date'] = pd.to_datetime(WDF['Date'],unit='s')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>City</th>\n",
       "      <th>Country</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Lng</th>\n",
       "      <th>Date</th>\n",
       "      <th>Descript</th>\n",
       "      <th>Cloudiness</th>\n",
       "      <th>Max_Temp</th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Wind_Speed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Akropong</td>\n",
       "      <td>GH</td>\n",
       "      <td>5.97</td>\n",
       "      <td>-0.09</td>\n",
       "      <td>2019-09-08 05:52:35</td>\n",
       "      <td>clear sky</td>\n",
       "      <td>0</td>\n",
       "      <td>25.00</td>\n",
       "      <td>83</td>\n",
       "      <td>5.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Nemencine</td>\n",
       "      <td>LT</td>\n",
       "      <td>54.85</td>\n",
       "      <td>25.48</td>\n",
       "      <td>2019-09-09 03:38:45</td>\n",
       "      <td>clear sky</td>\n",
       "      <td>0</td>\n",
       "      <td>16.00</td>\n",
       "      <td>82</td>\n",
       "      <td>2.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Lewistown</td>\n",
       "      <td>US</td>\n",
       "      <td>40.39</td>\n",
       "      <td>-90.15</td>\n",
       "      <td>2019-09-08 11:34:37</td>\n",
       "      <td>overcast clouds</td>\n",
       "      <td>90</td>\n",
       "      <td>22.00</td>\n",
       "      <td>88</td>\n",
       "      <td>2.60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mar del Plata</td>\n",
       "      <td>AR</td>\n",
       "      <td>-46.43</td>\n",
       "      <td>-67.52</td>\n",
       "      <td>2019-09-08 10:47:23</td>\n",
       "      <td>overcast clouds</td>\n",
       "      <td>98</td>\n",
       "      <td>8.64</td>\n",
       "      <td>56</td>\n",
       "      <td>3.65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Narrabri</td>\n",
       "      <td>AU</td>\n",
       "      <td>-30.33</td>\n",
       "      <td>149.78</td>\n",
       "      <td>2019-09-08 20:07:56</td>\n",
       "      <td>clear sky</td>\n",
       "      <td>0</td>\n",
       "      <td>12.22</td>\n",
       "      <td>53</td>\n",
       "      <td>5.70</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            City Country    Lat     Lng                Date         Descript  \\\n",
       "0       Akropong      GH   5.97   -0.09 2019-09-08 05:52:35        clear sky   \n",
       "1      Nemencine      LT  54.85   25.48 2019-09-09 03:38:45        clear sky   \n",
       "2      Lewistown      US  40.39  -90.15 2019-09-08 11:34:37  overcast clouds   \n",
       "3  Mar del Plata      AR -46.43  -67.52 2019-09-08 10:47:23  overcast clouds   \n",
       "4       Narrabri      AU -30.33  149.78 2019-09-08 20:07:56        clear sky   \n",
       "\n",
       "   Cloudiness  Max_Temp  Humidity  Wind_Speed  \n",
       "0           0     25.00        83        5.10  \n",
       "1           0     16.00        82        2.60  \n",
       "2          90     22.00        88        2.60  \n",
       "3          98      8.64        56        3.65  \n",
       "4           0     12.22        53        5.70  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "WDF.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2019-09-08'"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "DATE = str(WDF[\"Date\"][0])[:10]\n",
    "DATE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "WDF.to_csv(\"Weather.csv\", encoding=\"utf-8\", index=False)\n",
    "# I only made this because it was a requirement of the assignment.\n",
    "# But I don't think I needed to do this to get the data frame.  \n",
    "# I'm not sure if it would have been easier to do it differently \n",
    "# or if the csv is otherwise useful.  It is at least a record of the \n",
    "# data that supports the scatter plots."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting the Data\n",
    "* Use proper labeling of the plots using plot titles (including date of analysis) and axes labels.\n",
    "* Save the plotted figures as .pngs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Temperature Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(WDF[\"Lat\"], WDF[\"Max_Temp\"], marker=\"o\", color=\"g\", edgecolors=\"k\", alpha=.4)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Max Temperature \"+ str(DATE))\n",
    "plt.ylabel(\"Max Temperature (F)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"City_Latitude_vs_Max_Temp.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Humidity Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(WDF[\"Lat\"], WDF[\"Humidity\"], marker=\"o\", color=\"g\", edgecolors=\"k\", alpha=.4)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Humidity \"+ str(DATE))\n",
    "plt.ylabel(\"Humidity (%)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"City_Latitude_vs_Humidity.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Cloudiness Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(WDF[\"Lat\"], WDF[\"Cloudiness\"], marker=\"o\", color=\"g\", edgecolors=\"k\", alpha=.4)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Cloudiness \"+ str(DATE))\n",
    "plt.ylabel(\"Cloudiness (%)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"City_Latitude_vs_Cloudiness.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Latitude vs. Wind Speed Plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(WDF[\"Lat\"], WDF[\"Wind_Speed\"], marker=\"o\", color=\"g\", edgecolors=\"k\", alpha=.4)\n",
    "\n",
    "# Incorporate the other graph properties\n",
    "plt.title(\"City Latitude vs. Wind Speed \"+ str(DATE))\n",
    "plt.ylabel(\"Wind Speed (mph)\")\n",
    "plt.xlabel(\"Latitude\")\n",
    "plt.grid(True)\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"City_Latitude_vs_Wind_Speed.png\")\n",
    "\n",
    "# Show plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Observation 1: As expected, temperature can be proven to rise as you\n",
    "# near the equator from either northern or southern latitudes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Observation 2: Wind, Cloudiness and Humidity variability seems rather\n",
    "# uniform at any latitude.\n",
    "# I don't know why but I thought it might have more range the further you\n",
    "# travel from the equator."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Observation 3: Temperature and Latitude do not necessarily affect Humidity, \n",
    "# Cloudiness, or Wind Speed.  I thought there would be some kind of direct\n",
    "# relationship.  Maybe there is but this data does not articulate it."
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  },
  "nteract": {
   "version": "0.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
